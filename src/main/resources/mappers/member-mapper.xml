<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="MemberMapper">
  
	<resultMap type="Reservation" 				id="ReservationResultMap">
 		<id 	property="reservationNo" 			column="RESERV_NO"/>
 		<result property="memberEmail" 				column="MEMBER_EMAIL"/>
 		<result property="hostEmail" 				column="HOST_EMAIL"/>
 		<result property="spaceNo" 					column="SPACE_NO"/>
 		<result property="spaceName" 				column="SPACE_TITLE"/>
 		<result property="spaceAddress" 			column="SPACE_ADDRESS"/>
 		<result property="price" 					column="PRICE"/>
 		<result property="reservationDate" 			column="RESERV_DATE"/>
 		<result property="memberName" 				column="MEMBER_NAME"/>
 		<result property="memberPhone" 				column="MEMBER_PHONE"/>
 		<result property="paymentDate" 				column="PAYMENT_DATE"/>
 		<result property="reservationStatus" 		column="RESERV_STATUS"/>
 		<result property="reviewStatus" 			column="REV_STATUS"/>
 		<result property="revStart" 				column="REV_START"/>
 		<result property="revEnd" 					column="REV_END"/>
 		<result property="reviewNo" 				column="REVIEW_NO"/>
	</resultMap>
 	
 	<resultMap type="Review" id="reviewResultMap">
		<id property="reviewNo" column="REVIEW_NO" />
		<result property="spaceNo" column="SPACE_NO" />
		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="reviewContents" column="REVIEW_CONTENTS" />
		<result property="reviewWriter" column="REVIEW_WRITER" />
		<result property="rCreateDate" column="R_CREATE_DATE" />
		<result property="rUpdateDate" column="R_UPDATE_DATE" />
		<result property="rStatus" column="R_STATUS" />
		<result property="spaceName" column="SPACE_NAME" />
 		<result property="reservationNo" column="RESERV_NO"/>
	</resultMap>
	
	<resultMap type="Heart" id="heartResultMap">
		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="spaceNo" column="SPACE_NO" />
		<result property="spaceName" column="SPACE_NAME" />
		<result property="spaceFileRename" column="SPACE_FILERENAME" />
	</resultMap>
	
	<resultMap type="Space" id="SpaceResultMap">
  		<id 	property="spaceNo" 			column="SPACE_NO"/>
  		<result property="spaceName" 		column="SPACE_NAME"/>
  		<result property="address" 			column="SPACE_ADDRESS"/>
  		<result property="spaceComent" 		column="SPACE_COMENT"/>
  		<result property="spaceArea" 		column="SPACE_AREA"/>
  		<result property="spacePrice" 		column="SPACE_PRICE"/>
  		<result property="approval" 		column="APPROVAL"/>
  		<result property="approvalDate" 	column="APPROVAL_DATE"/>
  		<result property="hostEmail" 		column="HOST_EMAIL"/>
  		<result property="spaceStatus" 		column="SPACE_STATUS"/>
  		<association property="spaceImg" 	javaType="SpaceImg">
  			<result property="spaceFileRename" column="SPACE_FILERENAME"/>
  		</association>
  	</resultMap>
  	
 	<!-- 정보 찾기 --> 
	<select id="findKakao" parameterType="java.util.HashMap" resultType="Member">
		SELECT * FROM MEMBER_TBL WHERE memberEmail = #{email} AND memberName = #{nickname} 
	</select>

	<!-- 정보 저장 -->
	<insert id="registKakao" parameterType="java.util.HashMap">
		INSERT INTO MEMBER_TBL VALUES(#{email}, NULL, #{nickname}, #{nickname}, NULL, DEFAULT, DEFAULT, DEFAULT, DEFAULT, 'Y')
	</insert>
	
	<!-- 멤버(개인회원) -->
	<insert id="insertMember"> <!-- 회원가입 -->
		  INSERT INTO MEMBER_TBL VALUES(#{memberEmail}, #{memberPwd}, #{memberName}, #{memberNick}, #{memberPhone}, DEFAULT, DEFAULT, DEFAULT, DEFAULT)
	 </insert>

  	<select id="selectLoginOne" resultType="Member"> <!-- 로그인 -->
  		SELECT * FROM MEMBER_TBL WHERE memberEmail = #{memberEmail} AND memberPwd = #{memberPwd} AND mStatus = 'Y'
  	</select>
  	
  	<select id="selectOneByEmail" resultType="Member"> <!-- 마이페이지 -->
  		SELECT * FROM MEMBER_TBL WHERE memberEmail = #{memberEmail} AND mStatus = 'Y' AND kakaoStatus = 'N'
  	</select>
  	
  	<select id="selectOneByName" resultType="Member">
  		SELECT * FROM MEMBER_TBL WHERE memberName = #{memberName} AND kakaoStatus = 'Y'
  	</select>
  	 
  	<update id="updateMember"> <!-- 정보수정 -->
		UPDATE MEMBER_TBL
		SET memberNick = #{memberNick}, memberPwd = #{memberPwd}, memberPhone = #{memberPhone} WHERE memberEmail = #{memberEmail}
	</update>
  	
  	<update id="updateKakaoMember">
  		UPDATE MEMBER_TBL
		SET memberName = #{memberName}, memberNick = #{memberNick} WHERE memberEmail = #{memberEmail}
  	</update>
  	
  	<update id="deleteMember"> <!-- 회원탈퇴 -->
  		UPDATE MEMBER_TBL SET mStatus = 'N' WHERE memberEmail = #{memberEmail} 
  	</update>
  	
  	<select id="checkEmailDuplicate" resultType="_int"> <!-- 이메일 중복방지 -->
  		SELECT COUNT(*) FROM (
		SELECT memberEmail FROM MEMBER_TBL WHERE mStatus = 'Y'
		UNION
		SELECT hostEmail FROM HOST_TBL WHERE hStatus = 'Y') WHERE memberEmail = #{memberEmail}
  	</select>
  	
  	<select id="checkNickDuplicate" resultType="_int"> <!-- 닉네임 중복방지 -->
  	  	SELECT COUNT(*) FROM (
  	  	SELECT memberNick FROM MEMBER_TBL WHERE mStatus = 'Y'
  	  	UNION
  	  	SELECT memberNick FROM HOST_TBL WHERE hStatus = 'Y') WHERE memberNick = #{memberNick}
  	</select>
  	
  	<select id="checkMemDupEmail" resultType="_int"> <!-- 비밀번호 변경 시 이메일 존재 체크(개인) -->
  		SELECT COUNT(*) FROM MEMBER_TBL WHERE memberEmail = #{memberEmail} AND mStatus = 'Y'
  	</select>
  	
  	<select id="checkHostDupEmail" resultType="_int"> <!-- 비밀번호 변경 시 이메일 존재 체크(기업) -->
  		SELECT COUNT(*) FROM HOST_TBL WHERE hostEmail = #{hostEmail} AND hStatus = 'Y'
  	</select>
  	
  	<select id="selectTotalCount" resultType="_int"> <!-- 결제내역 페이징 갯수-->
  		SELECT COUNT(*) FROM RESERVATION_TBL WHERE MEMBER_EMAIL = #{memberEmail} AND RESERV_STATUS = 'Y'
  	</select>
  	
  	<select id="selectAllReserve" resultMap="ReservationResultMap"> <!-- 결제내역-->
   		SELECT REVIEW_NO, RESERVATION_TBL.RESERV_NO, PAYMENT_DATE, SPACE_TITLE, RESERVATION_TBL.SPACE_NO, RESERV_DATE, PRICE, REV_STATUS, RESERVATION_TBL.MEMBER_EMAIL, RESERV_STATUS
 		FROM RESERVATION_TBL
		LEFT JOIN REVIEW_TBL ON RESERVATION_TBL.RESERV_NO = REVIEW_TBL.RESERV_NO
		WHERE RESERVATION_TBL.MEMBER_EMAIL = #{memberEmail} AND RESERV_STATUS = 'Y' ORDER BY PAYMENT_DATE DESC, RESERV_NO
  	</select>
  	
  	<select id="getSpaceTotalCount" resultType="_int"> <!-- 찜한 공간 페이징 갯수 -->
  		SELECT COUNT(*) FROM HEART_TBL WHERE MEMBER_EMAIL = #{memberEmail}
  	</select>
  	
  	<select id="selectMySpace" resultMap="SpaceResultMap"> <!-- 찜한 공간 목록 -->
  		SELECT SPACE_FILERENAME, MEMBER_EMAIL, SPACE_TBL.SPACE_NO, SPACE_TBL.SPACE_NAME, SPACE_AREA, SPACE_PRICE, SPACE_STATUS 
  		FROM SPACE_TBL
		JOIN HEART_TBL ON SPACE_TBL.SPACE_NO = HEART_TBL.SPACE_NO
		WHERE MEMBER_EMAIL = #{memberEmail} AND SPACE_STATUS = 'Y'
  	</select>
  	
  	<select id="selectOneByNo" resultMap="ReservationResultMap"> <!-- 결제 상세 내역 -->
		SELECT * FROM RESERVATION_TBL WHERE RESERV_NO = #{reservationNo} AND RESERV_STATUS = 'Y'
  	</select>
  	
	<update id="updatePwd">
		UPDATE MEMBER_TBL SET memberPwd = #{memberPwd} WHERE memberEmail = #{memberEmail}
	</update>
  	
  	<update id="updateHostPwd">
		UPDATE HOST_TBL SET hostPwd= #{hostPwd} WHERE hostEmail = #{hostEmail}
	</update>
	
  	<!-- 호스트 -->
  	<insert id="insertHost">
		INSERT INTO HOST_TBL VALUES(#{hostEmail}, #{hostPwd}, #{hostName}, #{hostPhone}, #{companyName}, #{companyRegNum}, 
		#{accountName}, #{accountHolder}, #{accountNumber}, #{regPhotoName}, #{regPhotoRename}, #{regPhotoPath}, DEFAULT, DEFAULT, DEFAULT, #{companyName})
	 </insert>
  
  	<select id="selectLoginhOne" resultType="Host">
  		SELECT * FROM HOST_TBL WHERE hostEmail = #{hostEmail} AND hostPwd = #{hostPwd} AND hStatus = 'Y'
  	</select>
  	
  	<select id="checkHostEmailDuplicate" resultType="_int">
  		SELECT COUNT(*) FROM (
		SELECT hostEmail FROM HOST_TBL WHERE hStatus = 'Y'
		UNION
		SELECT memberEmail FROM MEMBER_TBL WHERE mStatus = 'Y') WHERE hostEmail =  #{hostEmail}
  	</select>
  	
  	
  	
<!--   	어드민 대시보드에 숫자뽑는 쿼리들  -->
<!-- 	일반회원 카운트 -->
  	<select id="selectMemberCount" resultType="_int">
		SELECT COUNT(*) FROM MEMBER_TBL
  		WHERE mStatus = 'Y'
  	</select>
<!-- 	일일 일반회원 가입 카운트 -->
  	<select id="selectMemberDailyCount" resultType="_int">
		SELECT COUNT(*) FROM MEMBER_TBL
		WHERE (TO_CHAR(enrollDate) = TO_CHAR(TO_DATE(SYSDATE-#{dayBefore},'YY/MM/DD')))
				AND (mStatus = 'Y')
	</select>
<!-- 	일일 호스트회원 가입 카운트 -->
	<select id="selectHostDailyCount" resultType="_int">
		SELECT COUNT(*) FROM HOST_TBL
		WHERE (TO_CHAR(enrollDate) = TO_CHAR(TO_DATE(SYSDATE-#{dayBefore},'YY/MM/DD')))
				AND (hStatus = 'Y')
	</select>
	
  	
  </mapper>